package com.secondary.web;import com.secondary.dto.Exposer;import com.secondary.dto.SeckillResult;import com.secondary.entity.Seckill;import com.secondary.service.SeckillService;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;import java.util.List;/** * Created by Secondary on 2017/8/7. */@Controller@RequestMapping("/seckill")public class SeckillController {    private Logger logger = LoggerFactory.getLogger(this.getClass());    @Autowired    private SeckillService seckillService;    @RequestMapping(value = "/list", method = RequestMethod.GET)    public String list(Model model){        //list.jsp + model = ModelAndView        List<Seckill> list = seckillService.getSeckillList();        model.addAttribute("list", list);        return "list";    }    @RequestMapping(value = "/{seckillId}/detail", method = RequestMethod.GET)    public String detail(@PathVariable("seckillId") Long seckillId,Model model){        if (seckillId == null){            return "redirect:/seckill/list";        }        Seckill seckill = seckillService.getById(seckillId);        if (seckill == null){            return "forward:/seckill/list";        }        model.addAttribute("seckill", seckill);        return "detail";    }    //ajax json    @RequestMapping(value = "{seckillId}/exposer", method = RequestMethod.POST)    @ResponseBody    public SeckillResult<Exposer> exposer(Long seckillId){        SeckillResult<Exposer> result;        try {            Exposer exposer = seckillService.exportSeckillUrl(seckillId);            result = new SeckillResult<Exposer>(true,exposer);        }catch(Exception e){            logger.error(e.getMessage(), e);            result = new SeckillResult<Exposer>(false,e.getMessage());        }        return result;    }}
package com.secondary.service.impl;import com.secondary.dao.SeckillDao;import com.secondary.dao.SuccessKilledDao;import com.secondary.dto.Exposer;import com.secondary.dto.SeckillExecution;import com.secondary.entity.Seckill;import com.secondary.exception.RepeatKillException;import com.secondary.exception.SeckillCloseException;import com.secondary.exception.SeckillException;import com.secondary.service.SeckillService;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.util.DigestUtils;import java.util.Date;import java.util.List;/** * Created by Secondary on 2017/8/5 */public class SeckillServiceImpl implements SeckillService {    private Logger logger = LoggerFactory.getLogger(this.getClass());    private SeckillDao seckillDao;    private SuccessKilledDao successKilledDao;    //md5盐值字符串，用于混淆md5    private final String slat = "dnk？“》as#Y8)*(&(#&$*(#(skdfnas*(^**";    //获取所有秒杀记录    public List<Seckill> getSeckillList() {        return seckillDao.queryAll(1,4);    }    //查询单个秒杀记录    public Seckill getById(long seckillId) {        return seckillDao.queryById(seckillId);    }    public Exposer exportSeckillUrl(long seckillId) {        Seckill seckill = seckillDao.queryById(seckillId);        if (seckill == null){            return new Exposer(false, seckillId);        }        Date startTime = seckill.getStartTime();        Date endTime = seckill.getEndTime();        //系统当前时间        Date nowTime = new Date();        if (nowTime.getTime() < startTime.getTime()                || nowTime.getTime() > endTime.getTime()){            return new Exposer(false,seckillId,nowTime.getTime(),startTime.getTime(),endTime.getTime());        }        //转换特定字符串的过程,不可逆        String md5 = getMD5(seckillId);        return new Exposer(true,md5,seckillId);    }    //md5封装    private String getMD5(long seckillId){        String base = seckillId + "/" + slat;        String md5 = DigestUtils.md5DigestAsHex(base.getBytes());        return md5;    }    public SeckillExecution executeSeckill(long seckillId, long userPhone, String md5) throws SeckillException, RepeatKillException, SeckillCloseException {        return null;    }}